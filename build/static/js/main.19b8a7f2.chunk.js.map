{"version":3,"sources":["firebase/firebase.js","db/ops/authOps.js","components/admin/BookConsultation.jsx","components/admin/Request.jsx","components/admin/DocRequests.jsx","components/admin/AddHospital.jsx","components/home/Login.jsx","components/home/Register.jsx","components/nav/SideBar.jsx","components/nav/Nav.jsx","components/nav/NavBar.jsx","components/patient/BookAConsultation.jsx","components/patient/Consultation.jsx","components/patient/Consultations.jsx","components/patient/MedicalRecord.jsx","components/patient/Pharmacies.jsx","db/hooks/authHooks.js","components/patient/Profile.jsx","components/doctor/PatientRecord.jsx","components/doctor/PatientRecords.jsx","components/doctor/Appointment.jsx","components/doctor/Appointments.jsx","components/Pharmacy.jsx","components/doctor/DoctorProfile.jsx","components/admin/Consultation.jsx","components/admin/AllConsultations.jsx","components/patient/Prescription.jsx","components/patient/Prescriptions.jsx","components/admin/AddPharmacy.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","signIn","email","password","a","auth","signInWithEmailAndPassword","toast","success","error","console","log","message","signOut","registerUser","data","userData","fullName","firstName","lastName","dob","createdAt","Date","toGMTString","role","medicalRecords","temperature","bp","sugar","mobile","medicare","address","profileImage","hospital","specialization","createUserWithEmailAndPassword","createdUser","collection","doc","user","uid","set","sendDocRequest","pendingApproval","adminId","userCreated","add","updateDocRequest","updateData","currentAdminId","currentUser","id","update","bookConsultation","docData","patientUid","patientfullName","patientMedicare","patientMobile","patientDob","dateAndSlot","docId","patientId","docName","patientName","date","slot","updatePatientMedicalRecord","patienId","updateDocPic","file","info","storage","ref","name","lastModified","put","uploadTask","getDownloadURL","downloadUrl","uploadPrescription","pharmacy","prescriptionData","pharmacyId","storeId","pharmacyAddress","pharmacyName","uploadedOn","toDateString","pharmacyPhone","phone","deletePrescription","delete","deleteConsultation","addHospital","hospitalData","addPharmacy","pharmacyData","deleteDocRequest","updateConsultation","consultationId","BookConsultation","users","consultations","hospitals","initState","initDateAndSlot","useState","bookingState","setBookingState","selectedDoc","setSelectedDoc","setDateAndSlot","bookedSlots","setBookedSlots","loading","setLoading","selectedPatient","setSelectedPatient","today","availableDates","i","push","setDate","getDate","handleChange","e","prevState","target","value","handleDateSlot","bookedslots","forEach","item","book","className","htmlFor","required","onChange","disabled","map","length","includes","type","onClick","Request","docRequest","style","color","preventDefault","DocRequests","docRequests","request","AddHospital","hospitalState","setHospitalState","onSubmit","pattern","title","placeholder","Login","loginState","setLoginState","handleSubmit","foundDocReq","docReq","Register","err","isDoc","setIsDoc","isPatient","setIsPatient","registerState","setRegisterState","handleRoleChange","SideBar","navLinks","link","to","key","icon","aria-hidden","content","Nav","notLoggedIn","window","halfmoon","toggleSidebar","data-toggle","aria-labelledby","NavBar","BookAConsultation","patient","Consultation","consultation","editing","setEditing","useEffect","slots","bookedDate","filter","split","bDate","setHours","getHours","Consultations","consults","setConsults","patientConsults","element","MedicalRecord","Pharmacies","pharmacies","handle","pharma","files","accept","GetDoc","doctor","dataPresent","setDoc","onSnapshot","snapshot","Profile","uploading","setUploading","handlePicChange","src","alt","width","height","PatientRecord","patientRecord","setPatientRecord","readOnly","PatientRecords","patients","setPatients","patientUsers","Appointment","Appointments","docConsults","Pharmacy","DoctorProfile","AllConsultations","Prescription","prescription","href","rel","download","textDecoration","Prescriptions","patientPrescritions","prescriptions","setPrescriptions","where","dbPrescriptions","GetPrescriptions","AddPharmacy","pharmacyState","setPharmacyState","configure","App","setUser","onAuthStateChanged","get","document","RegisterAuth","doctorsReqs","docs","setDocs","DoctorRequests","allUsers","setUsers","dbUsers","GetAllUsers","allConsultations","consultatios","setConsultatios","dbConsultations","GetAllConsultations","setHospitals","orderBy","dbHospitals","GetAllHospitals","setPharmacies","dbPharmacies","GetAllPharmacies","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","data-sidebar-type","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19b8a7f2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDP5bRueijcm5zt6r3Zt_cO9ur9OZj3p3o\",\r\n  authDomain: \"virtual-doctor-9a775.firebaseapp.com\",\r\n  projectId: \"virtual-doctor-9a775\",\r\n  storageBucket: \"virtual-doctor-9a775.appspot.com\",\r\n  messagingSenderId: \"26550726410\",\r\n  appId: \"1:26550726410:web:3f409011a2279d736d14f3\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nexport { db, firebase };\r\n","import { db, firebase } from \"../../firebase/firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const signIn = async (email, password) => {\r\n  try {\r\n    await firebase.auth().signInWithEmailAndPassword(email, password);\r\n    toast.success(\"Logged In\");\r\n  } catch (err) {\r\n    toast.error(\"Error Login\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const signOut = async () => {\r\n  try {\r\n    await firebase.auth().signOut();\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const registerUser = async (data) => {\r\n  try {\r\n    let userData = {\r\n      fullName: `${data.firstName} ${data.lastName}`,\r\n      email: data.email,\r\n      dob: data.dob,\r\n      createdAt: new Date().toGMTString(),\r\n      role: data.role,\r\n    };\r\n    if (data.role === \"Patient\") {\r\n      userData.medicalRecords = {\r\n        temperature: \"N/A\",\r\n        bp: \"N/A\",\r\n        sugar: \"N/A\",\r\n      };\r\n      userData.mobile = data.mobile;\r\n      userData.medicare = data.medicare;\r\n      userData.address = data.address;\r\n      userData.profileImage = \"\";\r\n    }\r\n    if (data.role === \"Doctor\") {\r\n      userData.hospital = data.hospital;\r\n      userData.specialization = data.specialization;\r\n      userData.profileImage = \"\";\r\n    }\r\n    let createdUser = await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(data.email, data.password);\r\n    await db.collection(\"users\").doc(createdUser.user.uid).set(userData);\r\n    toast.success(\"User Created\");\r\n  } catch (err) {\r\n    toast.error(\"Error Creating user\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const sendDocRequest = async (data) => {\r\n  try {\r\n    let userData = {\r\n      fullName: `${data.firstName} ${data.lastName}`,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      email: data.email,\r\n      createdAt: new Date().toGMTString(),\r\n      role: data.role,\r\n      dob: data.dob,\r\n      specialization: data.specialization,\r\n      password: data.password,\r\n      hospital: data.hospital,\r\n      pendingApproval: true,\r\n      adminId: \"\",\r\n      userCreated: false,\r\n    };\r\n    await db.collection(\"docrequests\").add(userData);\r\n    toast.success(\"Request Sent\");\r\n  } catch (err) {\r\n    toast.error(\"Error Sending request\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const updateDocRequest = async (data, userCreated) => {\r\n  try {\r\n    let updateData = {};\r\n    if (userCreated) {\r\n      updateData = {\r\n        userCreated: true,\r\n      };\r\n    } else {\r\n      let currentAdminId = firebase.auth().currentUser.uid;\r\n      updateData = {\r\n        pendingApproval: false,\r\n        adminId: currentAdminId,\r\n      };\r\n    }\r\n    await db.collection(\"docrequests\").doc(data.id).update(updateData);\r\n    toast.success(\"Doctor Updated\");\r\n  } catch (err) {\r\n    toast.error(\"Error Accepting Doctor\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const bookConsultation = async (\r\n  docData,\r\n  patientUid,\r\n  patientfullName,\r\n  patientMedicare,\r\n  patientMobile,\r\n  patientDob,\r\n  dateAndSlot\r\n) => {\r\n  try {\r\n    let data = {\r\n      docId: docData.id,\r\n      patientId: patientUid,\r\n      docName: docData.fullName,\r\n      patientName: patientfullName,\r\n      patientMedicare: patientMedicare,\r\n      patientMobile: patientMobile,\r\n      patientDob: patientDob,\r\n      specialization: docData.specialization,\r\n      date: dateAndSlot.date,\r\n      slot: dateAndSlot.slot,\r\n    };\r\n    await db.collection(\"consultations\").add(data);\r\n    toast.success(`Booked on ${data.date}`);\r\n  } catch (err) {\r\n    toast.error(\"Error booking\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const updatePatientMedicalRecord = async (\r\n  patienId,\r\n  { bp, sugar, temperature }\r\n) => {\r\n  try {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(patienId)\r\n      .update({ medicalRecords: { bp, sugar, temperature } });\r\n    toast.success(`Medical Record Updated`);\r\n  } catch (err) {\r\n    toast.error(\"Error updating record\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const updateDocPic = async (file, uid) => {\r\n  try {\r\n    toast.info(\"Uploading.. Please wait\");\r\n    const uploadTask = await firebase\r\n      .storage()\r\n      .ref(`images/${file.name}-${file.lastModified}`)\r\n      .put(file);\r\n    const downloadUrl = await uploadTask.ref.getDownloadURL();\r\n    await db.collection(\"users\").doc(uid).update({ profileImage: downloadUrl });\r\n    toast.success(\"Upload Success\");\r\n    console.log(downloadUrl);\r\n    return downloadUrl;\r\n  } catch (err) {\r\n    toast.error(\"Error Uploading File\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const uploadPrescription = async (pharmacy, file, uid) => {\r\n  try {\r\n    toast.info(\"Uploading... Please wait\");\r\n    const uploadTask = await firebase\r\n      .storage()\r\n      .ref(`prescriptions/${file.name}-${file.lastModified}`)\r\n      .put(file);\r\n    const downloadUrl = await uploadTask.ref.getDownloadURL();\r\n\r\n    const prescriptionData = {\r\n      downloadUrl,\r\n      patientUid: uid,\r\n      pharmacyId: pharmacy.storeId,\r\n      pharmacyAddress: pharmacy.address,\r\n      pharmacyName: pharmacy.name,\r\n      uploadedOn: new Date().toDateString(),\r\n      pharmacyPhone: pharmacy.phone,\r\n    };\r\n    console.log(pharmacy);\r\n    await db.collection(\"prescriptions\").add(prescriptionData);\r\n    toast.success(\"Upload Success\");\r\n    console.log(downloadUrl);\r\n    return downloadUrl;\r\n  } catch (err) {\r\n    toast.error(\"Error Uploading File\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const deletePrescription = async (id) => {\r\n  try {\r\n    await db.collection(\"prescriptions\").doc(id).delete();\r\n    toast.success(\"Delete Success\");\r\n  } catch (err) {\r\n    toast.error(\"Error Deleting File\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const deleteConsultation = async (id) => {\r\n  try {\r\n    await db.collection(\"consultations\").doc(id).delete();\r\n    toast.success(\"Consultation Cancelled\");\r\n  } catch (err) {\r\n    toast.error(\"Unable to cancel consultation\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const addHospital = async (hospitalData) => {\r\n  try {\r\n    await db.collection(\"hospitals\").add(hospitalData);\r\n    toast.success(\"Hospital Added\");\r\n  } catch (err) {\r\n    toast.error(\"Unable to add hospital\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const addPharmacy = async (pharmacyData) => {\r\n  try {\r\n    await db.collection(\"pharmacies\").add(pharmacyData);\r\n    toast.success(\"Pharmacy Added\");\r\n  } catch (err) {\r\n    toast.error(\"Unable to add Pharmacy\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const deleteDocRequest = async (id) => {\r\n  try {\r\n    await db.collection(\"docrequests\").doc(id).delete();\r\n    toast.success(\"Delete Success\");\r\n  } catch (err) {\r\n    toast.error(\"Error Deleting Request\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const updateConsultation = async (consultationId, dateAndSlot) => {\r\n  try {\r\n    await db\r\n      .collection(\"consultations\")\r\n      .doc(consultationId)\r\n      .update(dateAndSlot);\r\n    toast.success(\"Consultation Updated\");\r\n  } catch (err) {\r\n    toast.error(\"Error updating consultation\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { bookConsultation } from \"../../db/ops/authOps\";\r\n\r\nfunction BookConsultation({ users, consultations, hospitals }) {\r\n  const initState = {\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n  };\r\n\r\n  const initDateAndSlot = {\r\n    date: \"\",\r\n    slot: \"\",\r\n  };\r\n\r\n  const [bookingState, setBookingState] = useState(initState);\r\n  const [selectedDoc, setSelectedDoc] = useState(0);\r\n  const [dateAndSlot, setDateAndSlot] = useState(initDateAndSlot);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  //added\r\n  const [selectedPatient, setSelectedPatient] = useState(0);\r\n\r\n  const today = new Date();\r\n  const availableDates = [];\r\n  for (let i = 1; i <= 30; i++) {\r\n    availableDates.push(\r\n      new Date(new Date().setDate(today.getDate() + i)).toDateString()\r\n    );\r\n  }\r\n\r\n  const slots = [\r\n    { value: \"slot1\", name: \"Slot-1  9:00 - 9:15\" },\r\n    { value: \"slot2\", name: \"Slot-2  9:15 - 9:30\" },\r\n    { value: \"slot3\", name: \"Slot-3  9:30 - 9:45\" },\r\n    { value: \"slot4\", name: \"Slot-4  9:45 - 9:60\" },\r\n    { value: \"slot5\", name: \"Slot-5  10:00 - 10:15\" },\r\n    { value: \"slot6\", name: \"Slot-6  10:15 - 10:30\" },\r\n    { value: \"slot7\", name: \"Slot-7  10:30 - 10:45\" },\r\n    { value: \"slot8\", name: \"Slot-8  10:45 - 10:60\" },\r\n    { value: \"slot9\", name: \"Slot-9  11:00 - 11:15\" },\r\n    { value: \"slot10\", name: \"Slot-10  11:15 - 11:30\" },\r\n    { value: \"slot11\", name: \"Slot-11  11:30 - 11:45\" },\r\n    { value: \"slot12\", name: \"Slot-12  11:45 - 11:60\" },\r\n    { value: \"slot13\", name: \"Slot-13  12:00 - 12:15\" },\r\n    { value: \"slot14\", name: \"Slot-14  12:15 - 12:30\" },\r\n    { value: \"slot15\", name: \"Slot-15  12:30 - 12:45\" },\r\n    { value: \"slot16\", name: \"Slot-16  12:45 - 12:60\" },\r\n    { value: \"slot17\", name: \"Slot-17  13:00 - 13:15\" },\r\n    { value: \"slot18\", name: \"Slot-18  13:15 - 13:30\" },\r\n    { value: \"slot19\", name: \"Slot-19  13:30 - 13:45\" },\r\n    { value: \"slot20\", name: \"Slot-20  13:45 - 13:60\" },\r\n    { value: \"slot21\", name: \"Slot-21  14:00 - 14:15\" },\r\n    { value: \"slot22\", name: \"Slot-22  14:15 - 14:30\" },\r\n    { value: \"slot23\", name: \"Slot-23  14:30 - 14:45\" },\r\n    { value: \"slot24\", name: \"Slot-24  14:45 - 14:60\" },\r\n    { value: \"slot25\", name: \"Slot-25  15:00 - 15:15\" },\r\n    { value: \"slot26\", name: \"Slot-26  15:15 - 15:30\" },\r\n    { value: \"slot27\", name: \"Slot-27  15:30 - 15:45\" },\r\n    { value: \"slot28\", name: \"Slot-28  15:45 - 15:60\" },\r\n    { value: \"slot29\", name: \"Slot-29  16:00 - 16:15\" },\r\n    { value: \"slot30\", name: \"Slot-30  16:15 - 16:30\" },\r\n    { value: \"slot31\", name: \"Slot-31  16:30 - 16:45\" },\r\n    { value: \"slot32\", name: \"Slot-32  16:45 - 16:60\" },\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    setBookingState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    setSelectedDoc(0);\r\n    setDateAndSlot(initDateAndSlot);\r\n    setBookedSlots([]);\r\n  };\r\n\r\n  const handleDateSlot = (e) => {\r\n    setDateAndSlot((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n\r\n    if (e.target.name === \"date\") {\r\n      const bookedslots = [];\r\n\r\n      consultations.forEach((item) => {\r\n        if (\r\n          item.docId === users[selectedDoc - 1].id &&\r\n          item.date === e.target.value\r\n        ) {\r\n          bookedslots.push(item.slot);\r\n        }\r\n      });\r\n      setBookedSlots(bookedslots);\r\n    }\r\n  };\r\n\r\n  const book = async () => {\r\n    setLoading(true);\r\n    await bookConsultation(\r\n      users[selectedDoc - 1],\r\n      users[selectedPatient - 1].id,\r\n      users[selectedPatient - 1].fullName,\r\n      users[selectedPatient - 1].medicare,\r\n      users[selectedPatient - 1].mobile,\r\n      users[selectedPatient - 1].dob,\r\n      dateAndSlot\r\n    );\r\n    console.log(users[selectedPatient - 1]);\r\n    setLoading(false);\r\n    setBookingState(initState);\r\n    setSelectedDoc(0);\r\n    setDateAndSlot(initDateAndSlot);\r\n    setBookedSlots([]);\r\n    setSelectedPatient(0);\r\n  };\r\n\r\n  const hanldeDocChange = (e) => {\r\n    setSelectedDoc(e.target.value);\r\n  };\r\n\r\n  const handlePatientChange = (e) => {\r\n    setSelectedPatient(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"mt-20\"></div>\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col-8 col-lg-6\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"patient\">\r\n                Patient\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"patient\"\r\n                name=\"patient\"\r\n                required=\"required\"\r\n                value={selectedPatient}\r\n                onChange={handlePatientChange}\r\n              >\r\n                <option value={0} disabled>\r\n                  Select Patient\r\n                </option>\r\n\r\n                {users &&\r\n                  users.map((user, i) => {\r\n                    if (user.role === \"Patient\")\r\n                      return <option value={i + 1}>{user.fullName}</option>;\r\n                    else return <></>;\r\n                  })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"hospitals\">\r\n                Hospital\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"hospitals\"\r\n                name=\"hospital\"\r\n                required=\"required\"\r\n                value={bookingState.hospital}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Hospital\r\n                </option>\r\n                {hospitals.map((hospital, i) => (\r\n                  <option key={i} value={hospital.name}>\r\n                    {hospital.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"specialization\">\r\n                Specialization\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"specialization\"\r\n                name=\"specialization\"\r\n                required=\"required\"\r\n                value={bookingState.specialization}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Specialization\r\n                </option>\r\n                <option value=\"Physician\">Physician</option>\r\n                <option value=\"Neurologist\">Neurologist</option>\r\n                <option value=\"Dentist\">Dentist</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"availabledocs\">\r\n                Available Doctors\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"availabledocs\"\r\n                required=\"required\"\r\n                value={selectedDoc}\r\n                onChange={hanldeDocChange}\r\n              >\r\n                <option value={0} disabled>\r\n                  Select Doctors\r\n                </option>\r\n\r\n                {users &&\r\n                  users.map((user, i) => {\r\n                    if (\r\n                      user.role === \"Doctor\" &&\r\n                      user.specialization === bookingState.specialization &&\r\n                      user.hospital === bookingState.hospital\r\n                    )\r\n                      return <option value={i + 1}>{user.fullName}</option>;\r\n                    else return <></>;\r\n                  })}\r\n              </select>\r\n            </div>\r\n\r\n            {selectedDoc > 0 && (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label className=\"required\" htmlFor=\"pickDate\">\r\n                    Date\r\n                  </label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"pickDate\"\r\n                    name=\"date\"\r\n                    required=\"required\"\r\n                    value={dateAndSlot.date}\r\n                    onChange={handleDateSlot}\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Pick a Date\r\n                    </option>\r\n\r\n                    {availableDates.map((date) => {\r\n                      return <option value={date}>{date}</option>;\r\n                    })}\r\n                  </select>\r\n                </div>\r\n\r\n                {dateAndSlot.date.length > 0 && (\r\n                  <div className=\"form-group\">\r\n                    <label className=\"required\" htmlFor=\"slot\">\r\n                      Slot\r\n                    </label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"slot\"\r\n                      name=\"slot\"\r\n                      required=\"required\"\r\n                      value={dateAndSlot.slot}\r\n                      onChange={handleDateSlot}\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Pick a Slot\r\n                      </option>\r\n                      {slots.map((slot) => {\r\n                        if (!bookedSlots.includes(slot.value))\r\n                          return (\r\n                            <option value={slot.value}>{slot.name}</option>\r\n                          );\r\n                        else return <></>;\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              type=\"button\"\r\n              onClick={book}\r\n              disabled={loading}\r\n            >\r\n              Book\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookConsultation;\r\n","import React from \"react\";\r\nimport { updateDocRequest, deleteDocRequest } from \"../../db/ops/authOps\";\r\n\r\nfunction Request({ docRequest }) {\r\n  return (\r\n    <div className=\"mw-full\">\r\n      <div className=\"card p-0 m-10\">\r\n        <div className=\"content m-15\">\r\n          <h4 className=\"content-title\">{docRequest.fullName}</h4>\r\n          <div>\r\n            <span className=\"text-muted\">\r\n              <i style={{ color: \"red\" }} className=\"fa fa-clock mr-5\"></i>\r\n              {new Date(docRequest.createdAt).toDateString()}\r\n            </span>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"content m-0\">\r\n            <div>{docRequest.email}</div>\r\n            <hr />\r\n            <div>{docRequest.hospital}</div>\r\n            <hr />\r\n            <div>{docRequest.specialization}</div>\r\n            {docRequest.pendingApproval ? (\r\n              <div className=\"mt-5\">\r\n                <form className=\"form-inline\">\r\n                  <div className=\"form-group mb-0\">\r\n                    <button\r\n                      className=\"btn btn-secondary btn-sm\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        updateDocRequest(docRequest);\r\n                      }}\r\n                    >\r\n                      Accept\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        deleteDocRequest(docRequest.id);\r\n                      }}\r\n                    >\r\n                      Reject\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            ) : (\r\n              <div className=\"mt-5\">\r\n                <button className=\"btn btn-success btn-sm\">Accepted</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Request;\r\n","import React, { Fragment } from \"react\";\r\nimport Request from \"./Request\";\r\n\r\nfunction DocRequests({ docRequests }) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        {docRequests.length > 0 ? (\r\n          <div className=\"row row-eq-spacing-sm justify-content-center\">\r\n            {docRequests.map((request, i) => {\r\n              return (\r\n                <div key={i} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n                  <Request docRequest={request} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div>No Doctor requests found</div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default DocRequests;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { addHospital } from \"../../db/ops/authOps\";\r\n\r\nfunction AddHospital() {\r\n  const initState = {\r\n    name: \"\",\r\n    address: \"\",\r\n  };\r\n  const [hospitalState, setHospitalState] = useState(initState);\r\n  const handleChange = (e) => {\r\n    setHospitalState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addHospital(hospitalState);\r\n    setHospitalState(initState);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mt-20\"></div>\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-8 col-lg-6\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label className=\"required\">Hospital Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  pattern=\"[A-Za-z\\s]{3,}\"\r\n                  title=\"3 or more Alphabets\"\r\n                  placeholder=\"Enter Name\"\r\n                  required=\"required\"\r\n                  value={hospitalState.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"required\">Hospital Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  pattern=\"[A-Za-z\\s,-]{3,}\"\r\n                  title=\"3 or more Alphabets with ',' & '-'\"\r\n                  placeholder=\"Enter Address\"\r\n                  required=\"required\"\r\n                  value={hospitalState.address}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <button className=\"btn btn-danger btn-sm\" type=\"submit\">\r\n                Add\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AddHospital;\r\n","import React, { useState } from \"react\";\r\nimport { registerUser, signIn, updateDocRequest } from \"../../db/ops/authOps\";\r\n\r\nfunction Login({ docRequests }) {\r\n  const initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [loading, setLoading] = useState(false);\r\n  const [loginState, setLoginState] = useState(initState);\r\n\r\n  const handleChange = (e) => {\r\n    setLoginState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let foundDocReq = null;\r\n    if (docRequests) {\r\n      docRequests.forEach((docReq, i) => {\r\n        if (\r\n          docReq.email === loginState.email &&\r\n          docReq.password === loginState.password &&\r\n          docReq.pendingApproval === false\r\n        ) {\r\n          foundDocReq = docReq;\r\n          console.log(docReq);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (foundDocReq === null) {\r\n      console.log(\"not doc found\");\r\n      setLoginState({\r\n        ...initState,\r\n      });\r\n      setLoading(true);\r\n      await signIn(loginState.email, loginState.password);\r\n      setLoading(false);\r\n    } else if (foundDocReq !== null) {\r\n      console.log(\"doc found\");\r\n      if (!foundDocReq.userCreated) {\r\n        setLoginState({\r\n          ...initState,\r\n        });\r\n        setLoading(true);\r\n        await registerUser(foundDocReq);\r\n        await updateDocRequest(foundDocReq, true);\r\n        setLoading(false);\r\n      } else {\r\n        setLoginState({\r\n          ...initState,\r\n        });\r\n        setLoading(true);\r\n        await signIn(loginState.email, loginState.password);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"mt-20\"></div>\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col-8 col-lg-6\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                required=\"required\"\r\n                value={loginState.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n                placeholder=\"Enter Password\"\r\n                required=\"required\"\r\n                value={loginState.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              type=\"submit\"\r\n              disabled={loading || (docRequests && !docRequests.length > 0)}\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { registerUser, sendDocRequest } from \"../../db/ops/authOps\";\r\n\r\nfunction Register({ hospitals }) {\r\n  const initState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"\",\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n    err: \"\",\r\n    dob: \"\",\r\n    medicare: \"\",\r\n    mobile: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  const [isDoc, setIsDoc] = useState(false);\r\n  const [isPatient, setIsPatient] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [registerState, setRegisterState] = useState(initState);\r\n\r\n  const handleRoleChange = (e) => {\r\n    e.target.value === \"Doctor\" ? setIsDoc(true) : setIsDoc(false);\r\n    e.target.value === \"Patient\" ? setIsPatient(true) : setIsPatient(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setRegisterState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setRegisterState(initState);\r\n    setIsDoc(false);\r\n    setIsPatient(false);\r\n    setLoading(true);\r\n    if (registerState.role === \"Doctor\") {\r\n      await sendDocRequest(registerState);\r\n    } else {\r\n      await registerUser(registerState);\r\n    }\r\n    setLoading(false);\r\n    console.log(registerState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      \r\n      <div className=\"mt-20\"></div>\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col-8 col-lg-6\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                pattern=\"[A-Za-z]{3,}\"\r\n                title=\"3 or More letters\"\r\n                placeholder=\"Enter First Name\"\r\n                required=\"required\"\r\n                value={registerState.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                pattern=\"[A-Za-z]{3,}\"\r\n                title=\"3 or More letters\"\r\n                placeholder=\"Enter Last Name\"\r\n                required=\"required\"\r\n                value={registerState.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                required=\"required\"\r\n                value={registerState.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">Date of Birth</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                id=\"dob\"\r\n                name=\"dob\"\r\n                required=\"required\"\r\n                value={registerState.dob}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n                placeholder=\"Enter Password\"\r\n                required=\"required\"\r\n                value={registerState.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"registeras\">\r\n                Register As\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"registeras\"\r\n                name=\"role\"\r\n                required=\"required\"\r\n                value={registerState.role}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                  handleRoleChange(e);\r\n                }}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select\r\n                </option>\r\n                <option value=\"Doctor\">Doctor</option>\r\n                <option value=\"Patient\">Patient</option>\r\n              </select>\r\n            </div>\r\n\r\n            {isPatient && (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label className=\"required\">Mobile Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"mobile\"\r\n                    name=\"mobile\"\r\n                    pattern=\"\\+61[0-9]{9}\"\r\n                    title=\"Start with +61 and 9 digits after\"\r\n                    placeholder=\"Enter Mobile Number\"\r\n                    required=\"required\"\r\n                    value={registerState.mobile}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {/* <div className=\"invalid-feedback\">Not a valid Email</div> */}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"required\">Medicare Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"medicare\"\r\n                    name=\"medicare\"\r\n                    pattern=\"[0-9]{10}\"\r\n                    title=\"Must be a 10 digit Number\"\r\n                    placeholder=\"Enter Medicare Number\"\r\n                    required=\"required\"\r\n                    value={registerState.medicare}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {/* <div className=\"invalid-feedback\">Not a valid Email</div> */}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"required\">Address</label>\r\n                  <textarea\r\n                    className=\"form-control form-control-sm\"\r\n                    placeholder=\"Enter Unit Number, Street Name, Suburb, Pincode\"\r\n                    value={registerState.address}\r\n                    name=\"address\"\r\n                    onChange={handleChange}\r\n                    required\r\n                  ></textarea>\r\n                  {/* <div className=\"invalid-feedback\">Not a valid Email</div> */}\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n\r\n            {isDoc && (\r\n              <div className=\"form-group\">\r\n                <label className=\"required\" htmlFor=\"hospitals\">\r\n                  Hospital\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"hospitals\"\r\n                  name=\"hospital\"\r\n                  required=\"required\"\r\n                  value={registerState.hospital}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Hospital\r\n                  </option>\r\n                  {hospitals.map((hospital, i) => (\r\n                    <option key={i} value={hospital.name}>\r\n                      {hospital.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n            {isDoc && (\r\n              <div className=\"form-group\">\r\n                <label className=\"required\" htmlFor=\"specialization\">\r\n                  Specialization\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"specialization\"\r\n                  name=\"specialization\"\r\n                  required=\"required\"\r\n                  value={registerState.specialization}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Specialization\r\n                  </option>\r\n                  <option value=\"Physician\">Physician</option>\r\n                  <option value=\"Neurologist\">Neurologist</option>\r\n                  <option value=\"Dentist\">Dentist</option>\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n            >\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SideBar({ navLinks }) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-menu\">\r\n        <h6 className=\"sidebar-title\">Actions</h6>\r\n\r\n        <div className=\"sidebar-divider\"></div>\r\n\r\n        {navLinks.map((link, i) => {\r\n          return (\r\n            <Link\r\n              key={i}\r\n              to={link.key}\r\n              className=\"sidebar-link sidebar-link-with-icon\"\r\n            >\r\n              <span className=\"sidebar-icon bg-transparent justify-content-start mr-0\">\r\n                <i className={`fa ${link.icon}`} aria-hidden=\"true\"></i>\r\n              </span>\r\n              {link.content}\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../db/ops/authOps\";\r\n\r\nfunction Nav({ notLoggedIn, fullName }) {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-content\">\r\n        <button\r\n          className=\"btn btn-action\"\r\n          type=\"button\"\r\n          onClick={() => window.halfmoon.toggleSidebar()}\r\n        >\r\n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n          <span className=\"sr-only\">Toggle sidebar</span>\r\n        </button>\r\n      </div>\r\n\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        V-H\r\n      </Link>\r\n\r\n      <div className=\"navbar-content\">About</div>\r\n\r\n      {!notLoggedIn && (\r\n        <div className=\"navbar-content ml-auto mr-5\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item dropdown with-arrow\">\r\n              <span\r\n                className=\"nav-link\"\r\n                data-toggle=\"dropdown\"\r\n                id=\"nav-link-dropdown-toggle\"\r\n              >\r\n                <i\r\n                  className=\"fa fa-chevron-circle-down ml-5\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </span>\r\n\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right\"\r\n                aria-labelledby=\"nav-link-dropdown-toggle\"\r\n              >\r\n                <span className=\"dropdown-item\">{fullName}</span>\r\n                <div className=\"dropdown-content\">\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    type=\"button\"\r\n                    onClick={signOut}\r\n                  >\r\n                    LogOut\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Fragment } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport Nav from \"./Nav\";\r\n\r\nfunction NavBar({ navLinks, notLoggedIn, fullName }) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"sticky-alerts\"></div>\r\n      <div\r\n        className=\"sidebar-overlay\"\r\n        onClick={() => window.halfmoon.toggleSidebar()}\r\n      ></div>\r\n      <Nav notLoggedIn={notLoggedIn} fullName={fullName} />\r\n      <SideBar navLinks={navLinks} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { bookConsultation } from \"../../db/ops/authOps\";\r\n\r\nfunction BookAConsultation({ users, patient, consultations, hospitals }) {\r\n  const initState = {\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n  };\r\n\r\n  const initDateAndSlot = {\r\n    date: \"\",\r\n    slot: \"\",\r\n  };\r\n\r\n  const [bookingState, setBookingState] = useState(initState);\r\n  const [selectedDoc, setSelectedDoc] = useState(0);\r\n  const [dateAndSlot, setDateAndSlot] = useState(initDateAndSlot);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const today = new Date();\r\n  const availableDates = [];\r\n  for (let i = 1; i <= 30; i++) {\r\n    availableDates.push(\r\n      new Date(new Date().setDate(today.getDate() + i)).toDateString()\r\n    );\r\n  }\r\n\r\n  const slots = [\r\n    { value: \"slot1\", name: \"Slot-1  9:00 - 9:15\" },\r\n    { value: \"slot2\", name: \"Slot-2  9:15 - 9:30\" },\r\n    { value: \"slot3\", name: \"Slot-3  9:30 - 9:45\" },\r\n    { value: \"slot4\", name: \"Slot-4  9:45 - 9:60\" },\r\n    { value: \"slot5\", name: \"Slot-5  10:00 - 10:15\" },\r\n    { value: \"slot6\", name: \"Slot-6  10:15 - 10:30\" },\r\n    { value: \"slot7\", name: \"Slot-7  10:30 - 10:45\" },\r\n    { value: \"slot8\", name: \"Slot-8  10:45 - 10:60\" },\r\n    { value: \"slot9\", name: \"Slot-9  11:00 - 11:15\" },\r\n    { value: \"slot10\", name: \"Slot-10  11:15 - 11:30\" },\r\n    { value: \"slot11\", name: \"Slot-11  11:30 - 11:45\" },\r\n    { value: \"slot12\", name: \"Slot-12  11:45 - 11:60\" },\r\n    { value: \"slot13\", name: \"Slot-13  12:00 - 12:15\" },\r\n    { value: \"slot14\", name: \"Slot-14  12:15 - 12:30\" },\r\n    { value: \"slot15\", name: \"Slot-15  12:30 - 12:45\" },\r\n    { value: \"slot16\", name: \"Slot-16  12:45 - 12:60\" },\r\n    { value: \"slot17\", name: \"Slot-17  13:00 - 13:15\" },\r\n    { value: \"slot18\", name: \"Slot-18  13:15 - 13:30\" },\r\n    { value: \"slot19\", name: \"Slot-19  13:30 - 13:45\" },\r\n    { value: \"slot20\", name: \"Slot-20  13:45 - 13:60\" },\r\n    { value: \"slot21\", name: \"Slot-21  14:00 - 14:15\" },\r\n    { value: \"slot22\", name: \"Slot-22  14:15 - 14:30\" },\r\n    { value: \"slot23\", name: \"Slot-23  14:30 - 14:45\" },\r\n    { value: \"slot24\", name: \"Slot-24  14:45 - 14:60\" },\r\n    { value: \"slot25\", name: \"Slot-25  15:00 - 15:15\" },\r\n    { value: \"slot26\", name: \"Slot-26  15:15 - 15:30\" },\r\n    { value: \"slot27\", name: \"Slot-27  15:30 - 15:45\" },\r\n    { value: \"slot28\", name: \"Slot-28  15:45 - 15:60\" },\r\n    { value: \"slot29\", name: \"Slot-29  16:00 - 16:15\" },\r\n    { value: \"slot30\", name: \"Slot-30  16:15 - 16:30\" },\r\n    { value: \"slot31\", name: \"Slot-31  16:30 - 16:45\" },\r\n    { value: \"slot32\", name: \"Slot-32  16:45 - 16:60\" },\r\n  ];\r\n  const handleChange = (e) => {\r\n    setBookingState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    setSelectedDoc(0);\r\n    setDateAndSlot(initDateAndSlot);\r\n    setBookedSlots([]);\r\n  };\r\n\r\n  const handleDateSlot = (e) => {\r\n    setDateAndSlot((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n\r\n    if (e.target.name === \"date\") {\r\n      const bookedslots = [];\r\n\r\n      consultations.forEach((item) => {\r\n        if (\r\n          item.docId === users[selectedDoc - 1].id &&\r\n          item.date === e.target.value\r\n        ) {\r\n          bookedslots.push(item.slot);\r\n        }\r\n      });\r\n      setBookedSlots(bookedslots);\r\n    }\r\n  };\r\n\r\n  const book = async () => {\r\n    setLoading(true);\r\n    await bookConsultation(\r\n      users[selectedDoc - 1],\r\n      patient.uid,\r\n      patient.data.fullName,\r\n      patient.data.medicare,\r\n      patient.data.mobile,\r\n      patient.data.dob,\r\n      dateAndSlot\r\n    );\r\n    console.log(patient);\r\n    setLoading(false);\r\n    setBookingState(initState);\r\n    setSelectedDoc(0);\r\n    setDateAndSlot(initDateAndSlot);\r\n    setBookedSlots([]);\r\n  };\r\n\r\n  const hanldeDocChange = (e) => {\r\n    setSelectedDoc(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"mt-20\"></div>\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col-8 col-lg-6\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"hospitals\">\r\n                Hospital\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"hospitals\"\r\n                name=\"hospital\"\r\n                required=\"required\"\r\n                value={bookingState.hospital}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Hospital\r\n                </option>\r\n                {hospitals.map((hospital, i) => (\r\n                  <option key={i} value={hospital.name}>\r\n                    {hospital.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"specialization\">\r\n                Specialization\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"specialization\"\r\n                name=\"specialization\"\r\n                required=\"required\"\r\n                value={bookingState.specialization}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Specialization\r\n                </option>\r\n                <option value=\"Physician\">Physician</option>\r\n                <option value=\"Neurologist\">Neurologist</option>\r\n                <option value=\"Dentist\">Dentist</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"required\" htmlFor=\"availabledocs\">\r\n                Available Doctors\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"availabledocs\"\r\n                required=\"required\"\r\n                value={selectedDoc}\r\n                onChange={hanldeDocChange}\r\n              >\r\n                <option value={0} disabled>\r\n                  Select Doctors\r\n                </option>\r\n\r\n                {users &&\r\n                  users.map((user, i) => {\r\n                    if (\r\n                      user.role === \"Doctor\" &&\r\n                      user.specialization === bookingState.specialization &&\r\n                      user.hospital === bookingState.hospital\r\n                    )\r\n                      return <option value={i + 1}>{user.fullName}</option>;\r\n                    else return <></>;\r\n                  })}\r\n              </select>\r\n            </div>\r\n\r\n            {selectedDoc > 0 && (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label className=\"required\" htmlFor=\"pickDate\">\r\n                    Date\r\n                  </label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"pickDate\"\r\n                    name=\"date\"\r\n                    required=\"required\"\r\n                    value={dateAndSlot.date}\r\n                    onChange={handleDateSlot}\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Pick a Date\r\n                    </option>\r\n\r\n                    {availableDates.map((date) => {\r\n                      return <option value={date}>{date}</option>;\r\n                    })}\r\n                  </select>\r\n                </div>\r\n\r\n                {dateAndSlot.date.length > 0 && (\r\n                  <div className=\"form-group\">\r\n                    <label className=\"required\" htmlFor=\"slot\">\r\n                      Slot\r\n                    </label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"slot\"\r\n                      name=\"slot\"\r\n                      required=\"required\"\r\n                      value={dateAndSlot.slot}\r\n                      onChange={handleDateSlot}\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Pick a Slot\r\n                      </option>\r\n                      {slots.map((slot) => {\r\n                        if (!bookedSlots.includes(slot.value))\r\n                          return (\r\n                            <option value={slot.value}>{slot.name}</option>\r\n                          );\r\n                        else return <></>;\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              type=\"button\"\r\n              onClick={book}\r\n              disabled={loading}\r\n            >\r\n              Book\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookAConsultation;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { deleteConsultation, updateConsultation } from \"../../db/ops/authOps\";\r\n\r\nfunction Consultation({ consultation, consultations }) {\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const initDateAndSlot = {\r\n    date: consultation.date,\r\n    slot: consultation.slot,\r\n  };\r\n\r\n  const [dateAndSlot, setDateAndSlot] = useState(initDateAndSlot);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n\r\n  const today = new Date();\r\n  const availableDates = [];\r\n  for (let i = 0; i <= 30; i++) {\r\n    availableDates.push(\r\n      new Date(new Date().setDate(today.getDate() + i)).toDateString()\r\n    );\r\n  }\r\n\r\n  const handleDateSlot = (e) => {\r\n    setDateAndSlot((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n\r\n    if (e.target.name === \"date\") {\r\n      const bookedslots = [];\r\n\r\n      consultations.forEach((item) => {\r\n        if (item.docId === consultation.docId && item.date === e.target.value) {\r\n          bookedslots.push(item.slot);\r\n        }\r\n      });\r\n      setBookedSlots(bookedslots);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const bookedslots = [];\r\n\r\n    consultations.forEach((item) => {\r\n      if (\r\n        item.docId === consultation.docId &&\r\n        item.date === consultation.date\r\n      ) {\r\n        bookedslots.push(item.slot);\r\n      }\r\n    });\r\n    setBookedSlots(bookedslots);\r\n  }, [consultation.date, consultation.docId, consultations]);\r\n\r\n  const slots = [\r\n    { value: \"slot1\", name: \"Slot-1  9:00 - 9:15\" },\r\n    { value: \"slot2\", name: \"Slot-2  9:15 - 9:30\" },\r\n    { value: \"slot3\", name: \"Slot-3  9:30 - 9:45\" },\r\n    { value: \"slot4\", name: \"Slot-4  9:45 - 9:60\" },\r\n    { value: \"slot5\", name: \"Slot-5  10:00 - 10:15\" },\r\n    { value: \"slot6\", name: \"Slot-6  10:15 - 10:30\" },\r\n    { value: \"slot7\", name: \"Slot-7  10:30 - 10:45\" },\r\n    { value: \"slot8\", name: \"Slot-8  10:45 - 10:60\" },\r\n    { value: \"slot9\", name: \"Slot-9  11:00 - 11:15\" },\r\n    { value: \"slot10\", name: \"Slot-10  11:15 - 11:30\" },\r\n    { value: \"slot11\", name: \"Slot-11  11:30 - 11:45\" },\r\n    { value: \"slot12\", name: \"Slot-12  11:45 - 11:60\" },\r\n    { value: \"slot13\", name: \"Slot-13  12:00 - 12:15\" },\r\n    { value: \"slot14\", name: \"Slot-14  12:15 - 12:30\" },\r\n    { value: \"slot15\", name: \"Slot-15  12:30 - 12:45\" },\r\n    { value: \"slot16\", name: \"Slot-16  12:45 - 12:60\" },\r\n    { value: \"slot17\", name: \"Slot-17  13:00 - 13:15\" },\r\n    { value: \"slot18\", name: \"Slot-18  13:15 - 13:30\" },\r\n    { value: \"slot19\", name: \"Slot-19  13:30 - 13:45\" },\r\n    { value: \"slot20\", name: \"Slot-20  13:45 - 13:60\" },\r\n    { value: \"slot21\", name: \"Slot-21  14:00 - 14:15\" },\r\n    { value: \"slot22\", name: \"Slot-22  14:15 - 14:30\" },\r\n    { value: \"slot23\", name: \"Slot-23  14:30 - 14:45\" },\r\n    { value: \"slot24\", name: \"Slot-24  14:45 - 14:60\" },\r\n    { value: \"slot25\", name: \"Slot-25  15:00 - 15:15\" },\r\n    { value: \"slot26\", name: \"Slot-26  15:15 - 15:30\" },\r\n    { value: \"slot27\", name: \"Slot-27  15:30 - 15:45\" },\r\n    { value: \"slot28\", name: \"Slot-28  15:45 - 15:60\" },\r\n    { value: \"slot29\", name: \"Slot-29  16:00 - 16:15\" },\r\n    { value: \"slot30\", name: \"Slot-30  16:15 - 16:30\" },\r\n    { value: \"slot31\", name: \"Slot-31  16:30 - 16:45\" },\r\n    { value: \"slot32\", name: \"Slot-32  16:45 - 16:60\" },\r\n  ];\r\n  return (\r\n    <div className=\"mw-full\">\r\n      <div className=\"card  p-0 m-10\">\r\n        <div className=\"px-card py-10 border-bottom\">\r\n          <h2 className=\"card-title font-size-18 m-0\">\r\n            {consultation.docName}\r\n          </h2>\r\n        </div>\r\n        <div className=\"content m-10\">\r\n          {!editing && (\r\n            <div>\r\n              <span className=\"font-size-5 \">\r\n                <i\r\n                  style={{ color: \"red\" }}\r\n                  className=\"fa fa-clock mr-5\"\r\n                  aria-hidden=\"true\"\r\n                ></i>{\" \"}\r\n                {consultation.date}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {editing && (\r\n            <div>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"pickDate\"\r\n                name=\"date\"\r\n                required=\"required\"\r\n                value={dateAndSlot.date}\r\n                onChange={handleDateSlot}\r\n              >\r\n                <option value={dateAndSlot.date} disabled>\r\n                  {dateAndSlot.date}\r\n                </option>\r\n\r\n                {availableDates.map((date) => {\r\n                  return <option value={date}>{date}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          <hr />\r\n          <div>{consultation.specialization}</div>\r\n\r\n          <hr />\r\n          {!editing &&\r\n            slots.map((slot, i) => {\r\n              if (consultation.slot === slot.value)\r\n                return <div key={i}>{slot.name}</div>;\r\n              else return <Fragment key={i} />;\r\n            })}\r\n\r\n          {editing && (\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"slot\"\r\n              name=\"slot\"\r\n              required=\"required\"\r\n              value={dateAndSlot.slot}\r\n              onChange={handleDateSlot}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Pick a Slot\r\n              </option>\r\n              {slots.map((slot) => {\r\n                if (!bookedSlots.includes(slot.value))\r\n                  return <option value={slot.value}>{slot.name}</option>;\r\n                else return <></>;\r\n              })}\r\n            </select>\r\n          )}\r\n\r\n          <hr />\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group mb-10\">\r\n              {(function () {\r\n                let bookedDate =\r\n                  consultation.date +\r\n                  \" \" +\r\n                  slots\r\n                    .filter((slot) => slot.value === consultation.slot)[0]\r\n                    .name.split(\" \")[2] +\r\n                  \":00\";\r\n                let bDate = new Date(bookedDate);\r\n                bDate.setHours(bDate.getHours() - 3);\r\n                if (new Date() <= bDate && !editing) {\r\n                  return (\r\n                    <button\r\n                      className=\"btn btn-primary btn-sm\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setEditing(true);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  );\r\n                }\r\n              })()}\r\n              {!editing && (\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    deleteConsultation(consultation.id);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              )}\r\n              {editing && (\r\n                <button\r\n                  className=\"btn btn-success btn-sm\"\r\n                  onClick={async (e) => {\r\n                    e.preventDefault();\r\n                    await updateConsultation(consultation.id, dateAndSlot);\r\n                    setEditing(false);\r\n                    setDateAndSlot(initDateAndSlot);\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              )}\r\n              {editing && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setEditing(false);\r\n                    setDateAndSlot(initDateAndSlot);\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Consultation;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Consultation from \"./Consultation\";\r\n\r\nfunction Consultations({ uid, consultations }) {\r\n  const [consults, setConsults] = useState([]);\r\n  useEffect(() => {\r\n    let patientConsults = [];\r\n    consultations.forEach((element) => {\r\n      if (uid === element.patientId) {\r\n        patientConsults.push(element);\r\n      }\r\n    });\r\n    setConsults(patientConsults);\r\n  }, [consultations, uid]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row row-eq-spacing-sm\">\r\n        {consults.length > 0 ? (\r\n          consults.map((item, i) => {\r\n            return (\r\n              <div key={i} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n                <Consultation\r\n                  consultation={item}\r\n                  consultations={consultations}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <h5>No Consultations Found</h5>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Consultations;\r\n","import React from \"react\";\r\n\r\nfunction MedicalRecord({ patient }) {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"mt-20\"></div>\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col-8 col-lg-6\">\r\n          <div className=\"mw-full\">\r\n            <div className=\"card  p-0\">\r\n              <div className=\"px-card py-10 border-bottom\">\r\n                <h2 className=\"card-title font-size-18 m-0\">\r\n                  Patient Medical Record\r\n                </h2>\r\n              </div>\r\n\r\n              <div className=\"content\">\r\n                <div>{`BP - ${patient.data.medicalRecords.bp}`}</div>\r\n\r\n                <hr />\r\n                <div>{`Sugar - ${patient.data.medicalRecords.sugar}`}</div>\r\n                <hr />\r\n                <div>{`Temperature - ${patient.data.medicalRecords.temperature}`}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicalRecord;\r\n","import React, { Fragment } from \"react\";\r\nimport { uploadPrescription } from \"../../db/ops/authOps\";\r\n\r\nfunction Pharmacies({ uid, pharmacies }) {\r\n  // const pharmacies = [\r\n  //   {\r\n  //     name: \"Pharmacy One\",\r\n  //     storeId: \"Store Id: 233434\",\r\n  //     address: \"19-23 Errol St, North Melbourne VIC 3051, Australia\",\r\n  //     phone: \"+61111111111\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Two\",\r\n  //     storeId: \"Store Id: 764857\",\r\n  //     address: \"shop l2/345 Bourke St, Melbourne VIC 3000, Australia\",\r\n  //     phone: \"+61222222222\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Three\",\r\n  //     storeId: \"Store Id: 786354\",\r\n  //     address: \"Shop l2/322 Bourke St, Sydney VIC 3052, Australia\",\r\n  //     phone: \"+61333333333\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Four\",\r\n  //     storeId: \"Store Id: 263547\",\r\n  //     address: \"19-22 Fake St, Melbourne VIC 3051, Australia\",\r\n  //     phone: \"+61444444444\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Five\",\r\n  //     storeId: \"Store Id: 875968\",\r\n  //     address: \"121-25 Normal St, South Melbourne VIC 3050, Australia\",\r\n  //     phone: \"+61555555555\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Six\",\r\n  //     storeId: \"Store Id: 174635\",\r\n  //     address: \"29-233 Super St, North Melbourne VIC 3051, Australia\",\r\n  //     phone: \"+61666666666\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Seven\",\r\n  //     storeId: \"Store Id: 098576\",\r\n  //     address: \"12-33 Errol St, Sydney, Australia\",\r\n  //     phone: \"+61777777777\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Pharmacy Eight\",\r\n  //     storeId: \"Store Id: 645437\",\r\n  //     address: \"19-220 Errol St, North Melbourne VIC 3051, Australia\",\r\n  //     phone: \"+61888888888\",\r\n  //   },\r\n  // ];\r\n\r\n  const handle = async (e, pharma) => {\r\n    await uploadPrescription(pharma, e.target.files[0], uid);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row row-eq-spacing-sm\">\r\n        {pharmacies.map((pharma) => (\r\n          <div key={pharma.storeId} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n            <div className=\"mw-full\">\r\n              <div className=\"card  p-0 m-10\">\r\n                <div className=\"px-card py-10 border-bottom\">\r\n                  <h2 className=\"card-title font-size-18 m-0\">{pharma.name}</h2>\r\n                </div>\r\n\r\n                <div className=\"content m-10\">\r\n                  <div>{pharma.storeId}</div>\r\n                  <hr />\r\n                  <div>{pharma.phone}</div>\r\n                  <hr />\r\n                  <div>\r\n                    <i\r\n                      style={{ color: \"red\" }}\r\n                      className=\"fa fa-map-marker-alt mr-5\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                    {pharma.address}\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-group\">\r\n                    <div className=\"custom-file\">\r\n                      <label htmlFor={pharma.storeId}>\r\n                        Upload Prescription\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        id={pharma.storeId}\r\n                        accept=\".jpg,.png,.jpeg,.pdf,.doc,.docx\"\r\n                        onChange={(e) => handle(e, pharma)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Pharmacies;\r\n","import { useEffect, useState } from \"react\";\r\nimport { db, firebase } from \"../../firebase/firebase\";\r\n\r\nfunction RegisterAuth() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return firebase.auth().onAuthStateChanged(async (user) => {\r\n        if (user) {\r\n          let document = await db.collection(\"users\").doc(user.uid).get();\r\n          setUser({\r\n            uid: user.uid,\r\n            data: document.data(),\r\n          });\r\n        } else {\r\n          setUser(null);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return user;\r\n}\r\n\r\nfunction DocRequests() {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return db.collection(\"docrequests\").onSnapshot((snapshot) => {\r\n        const docRequests = [];\r\n\r\n        snapshot.forEach((request) => {\r\n          docRequests.push({ ...request.data(), id: request.id });\r\n        });\r\n\r\n        setDocs(docRequests);\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return docs;\r\n}\r\n\r\nfunction GetAllUsers() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return db.collection(\"users\").onSnapshot((snapshot) => {\r\n        const dbUsers = [];\r\n\r\n        snapshot.forEach((user) => {\r\n          dbUsers.push({ ...user.data(), id: user.id });\r\n        });\r\n\r\n        setUsers(dbUsers);\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return users;\r\n}\r\n\r\nfunction GetAllConsultations() {\r\n  const [consultatios, setConsultatios] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return db.collection(\"consultations\").onSnapshot((snapshot) => {\r\n        const dbConsultations = [];\r\n\r\n        snapshot.forEach((item) => {\r\n          dbConsultations.push({ ...item.data(), id: item.id });\r\n        });\r\n\r\n        setConsultatios(dbConsultations);\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return consultatios;\r\n}\r\n\r\nfunction GetDoc(uid) {\r\n  const [doc, setDoc] = useState({\r\n    doctor: {},\r\n    dataPresent: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (uid) {\r\n      try {\r\n        return db\r\n          .collection(\"users\")\r\n          .doc(uid)\r\n          .onSnapshot((snapshot) => {\r\n            setDoc({\r\n              doctor: { ...snapshot.data() },\r\n              dataPresent: true,\r\n            });\r\n          });\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  }, [uid]);\r\n  return doc;\r\n}\r\n\r\nfunction GetPrescriptions(uid) {\r\n  const [prescriptions, setPrescriptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return db\r\n        .collection(\"prescriptions\")\r\n        .where(\"patientUid\", \"==\", uid)\r\n        .onSnapshot((snapshot) => {\r\n          const dbPrescriptions = [];\r\n          snapshot.forEach((item) => {\r\n            dbPrescriptions.push({ ...item.data(), id: item.id });\r\n          });\r\n          setPrescriptions(dbPrescriptions);\r\n        });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, [uid]);\r\n\r\n  return prescriptions;\r\n}\r\n\r\nfunction GetAllHospitals() {\r\n  const [hospitals, setHospitals] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return db\r\n        .collection(\"hospitals\")\r\n        .orderBy(\"name\")\r\n        .onSnapshot((snapshot) => {\r\n          const dbHospitals = [];\r\n\r\n          snapshot.forEach((item) => {\r\n            dbHospitals.push({ ...item.data(), id: item.id });\r\n          });\r\n\r\n          setHospitals(dbHospitals);\r\n        });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return hospitals;\r\n}\r\n\r\nfunction GetAllPharmacies() {\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      return db\r\n        .collection(\"pharmacies\")\r\n        .orderBy(\"name\")\r\n        .onSnapshot((snapshot) => {\r\n          const dbPharmacies = [];\r\n\r\n          snapshot.forEach((item) => {\r\n            dbPharmacies.push({ ...item.data(), id: item.id });\r\n          });\r\n\r\n          setPharmacies(dbPharmacies);\r\n        });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n\r\n  return pharmacies;\r\n}\r\n\r\nexport {\r\n  RegisterAuth,\r\n  DocRequests,\r\n  GetAllUsers,\r\n  GetAllConsultations,\r\n  GetDoc,\r\n  GetPrescriptions,\r\n  GetAllHospitals,\r\n  GetAllPharmacies,\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { GetDoc } from \"../../db/hooks/authHooks\";\r\nimport { updateDocPic } from \"../../db/ops/authOps\";\r\n\r\nfunction Profile({ uid }) {\r\n  const { doctor, dataPresent } = GetDoc(uid);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handlePicChange = async (e) => {\r\n    setUploading(true);\r\n    await updateDocPic(e.target.files[0], uid);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mw-full\">\r\n        <div className=\"card p-0 text-center\">\r\n          <img\r\n            src={\r\n              dataPresent && doctor.profileImage.length > 0\r\n                ? doctor.profileImage\r\n                : \"https://www.pngfind.com/pngs/b/610-6104451_placeholder-png.png\"\r\n            }\r\n            className=\"img-fluid rounded-circle mt-10\"\r\n            alt=\"...\"\r\n            width=\"200\"\r\n            height=\"200\"\r\n          />\r\n\r\n          <div className=\"content\">\r\n            <h2 className=\"content-title\">{`Dr. ${doctor.fullName}`}</h2>\r\n            <p className=\"text-muted\">{`Email: ${doctor.email}`}</p>\r\n            {dataPresent && !doctor.profileImage.length > 0 && (\r\n              <div className=\"custom-file\">\r\n                <label htmlFor=\"profile-pic\">Update Picture</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"profile-pic\"\r\n                  accept=\".jpg,.png,.jpeg\"\r\n                  onChange={handlePicChange}\r\n                  disabled={uploading}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { updatePatientMedicalRecord } from \"../../db/ops/authOps\";\r\n\r\nfunction PatientRecord({ patient }) {\r\n  const initState = {\r\n    bp: patient.medicalRecords.bp,\r\n    sugar: patient.medicalRecords.sugar,\r\n    temperature: patient.medicalRecords.temperature,\r\n  };\r\n  const [patientRecord, setPatientRecord] = useState(initState);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const handleEdit = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      patientRecord.temperature.length > 0 &&\r\n      patientRecord.bp.length > 0 &&\r\n      patientRecord.sugar.length > 0\r\n    ) {\r\n      await updatePatientMedicalRecord(patient.id, patientRecord);\r\n      setEditing(false);\r\n    } else {\r\n      setPatientRecord(initState);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPatientRecord((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"mw-full\">\r\n      <div className=\"card  p-0\">\r\n        <div className=\"px-card py-10 border-bottom\">\r\n          <h2 className=\"card-title font-size-18 m-0\">{patient.fullName}</h2>\r\n        </div>\r\n\r\n        <div className=\"content m-10\">\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"bp\">BP</label>\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                id=\"bp\"\r\n                name=\"bp\"\r\n                value={patientRecord.bp}\r\n                readOnly={!editing}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"sugar\">Sugar</label>\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                id=\"sugar\"\r\n                name=\"sugar\"\r\n                value={patientRecord.sugar}\r\n                readOnly={!editing}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"temp\">Temperature</label>\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                id=\"temp\"\r\n                name=\"temperature\"\r\n                value={patientRecord.temperature}\r\n                onChange={handleChange}\r\n                readOnly={!editing}\r\n              />\r\n            </div>\r\n          </form>\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group mb-10\">\r\n              {!editing && (\r\n                <button className=\"btn btn-danger\" onClick={handleEdit}>\r\n                  Edit\r\n                </button>\r\n              )}\r\n              {editing && (\r\n                <>\r\n                  <button className=\"btn btn-success\" onClick={handleSubmit}>\r\n                    Submit\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" onClick={handleCancel}>\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRecord;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport PatientRecord from \"./PatientRecord\";\r\n\r\nfunction PatientRecords({ users }) {\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let patientUsers = [];\r\n    users.forEach((user) => {\r\n      if (user.role === \"Patient\") {\r\n        patientUsers.push(user);\r\n      }\r\n    });\r\n    setPatients(patientUsers);\r\n  }, [users]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {patients.length > 0 ? (\r\n        <div className=\"row row-eq-spacing-sm\">\r\n          {patients.map((item, i) => {\r\n            return (\r\n              <div key={i} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n                <PatientRecord patient={item} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div>No Patients found</div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PatientRecords;\r\n","import React, { Fragment } from \"react\";\r\n\r\nfunction Appointment({ consultation }) {\r\n  const slots = [\r\n    { value: \"slot1\", name: \"Slot-1  9:00 - 9:15\" },\r\n    { value: \"slot2\", name: \"Slot-2  9:15 - 9:30\" },\r\n    { value: \"slot3\", name: \"Slot-3  9:30 - 9:45\" },\r\n    { value: \"slot4\", name: \"Slot-4  9:45 - 9:60\" },\r\n    { value: \"slot5\", name: \"Slot-5  10:00 - 10:15\" },\r\n    { value: \"slot6\", name: \"Slot-6  10:15 - 10:30\" },\r\n    { value: \"slot7\", name: \"Slot-7  10:30 - 10:45\" },\r\n    { value: \"slot8\", name: \"Slot-8  10:45 - 10:60\" },\r\n    { value: \"slot9\", name: \"Slot-9  11:00 - 11:15\" },\r\n    { value: \"slot10\", name: \"Slot-10  11:15 - 11:30\" },\r\n    { value: \"slot11\", name: \"Slot-11  11:30 - 11:45\" },\r\n    { value: \"slot12\", name: \"Slot-12  11:45 - 11:60\" },\r\n    { value: \"slot13\", name: \"Slot-13  12:00 - 12:15\" },\r\n    { value: \"slot14\", name: \"Slot-14  12:15 - 12:30\" },\r\n    { value: \"slot15\", name: \"Slot-15  12:30 - 12:45\" },\r\n    { value: \"slot16\", name: \"Slot-16  12:45 - 12:60\" },\r\n    { value: \"slot17\", name: \"Slot-17  13:00 - 13:15\" },\r\n    { value: \"slot18\", name: \"Slot-18  13:15 - 13:30\" },\r\n    { value: \"slot19\", name: \"Slot-19  13:30 - 13:45\" },\r\n    { value: \"slot20\", name: \"Slot-20  13:45 - 13:60\" },\r\n    { value: \"slot21\", name: \"Slot-21  14:00 - 14:15\" },\r\n    { value: \"slot22\", name: \"Slot-22  14:15 - 14:30\" },\r\n    { value: \"slot23\", name: \"Slot-23  14:30 - 14:45\" },\r\n    { value: \"slot24\", name: \"Slot-24  14:45 - 14:60\" },\r\n    { value: \"slot25\", name: \"Slot-25  15:00 - 15:15\" },\r\n    { value: \"slot26\", name: \"Slot-26  15:15 - 15:30\" },\r\n    { value: \"slot27\", name: \"Slot-27  15:30 - 15:45\" },\r\n    { value: \"slot28\", name: \"Slot-28  15:45 - 15:60\" },\r\n    { value: \"slot29\", name: \"Slot-29  16:00 - 16:15\" },\r\n    { value: \"slot30\", name: \"Slot-30  16:15 - 16:30\" },\r\n    { value: \"slot31\", name: \"Slot-31  16:30 - 16:45\" },\r\n    { value: \"slot32\", name: \"Slot-32  16:45 - 16:60\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"mw-full\">\r\n      <div className=\"card  p-0\">\r\n        <div className=\"px-card py-10 border-bottom\">\r\n          <h2 className=\"card-title font-size-18 m-0\">\r\n            {consultation.patientName}\r\n          </h2>\r\n          <div>\r\n            <span className=\"font-size-5 \">\r\n              <i\r\n                style={{ color: \"red\" }}\r\n                className=\"fa fa-clock mr-5\"\r\n                aria-hidden=\"true\"\r\n              ></i>{\" \"}\r\n              {consultation.date}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content m-10\">\r\n          <div>{consultation.specialization}</div>\r\n\r\n          <hr />\r\n          <div>{`Medicare: ${consultation.patientMedicare}`}</div>\r\n\r\n          <hr />\r\n          <div>{`Phone: ${consultation.patientMobile}`}</div>\r\n\r\n          <hr />\r\n          <div>{`DOB: ${consultation.patientDob}`}</div>\r\n\r\n          <hr />\r\n          {slots.map((slot, i) => {\r\n            if (consultation.slot === slot.value)\r\n              return <div key={i}>{slot.name}</div>;\r\n            else return <Fragment key={i} />;\r\n          })}\r\n\r\n          <hr />\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group mb-10\">\r\n              <button className=\"btn btn-danger btn-sm\">\r\n                <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n              </button>\r\n              <button className=\"btn btn-success btn-sm\">\r\n                <i className=\"fa fa-comment-alt\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Appointment from \"./Appointment\";\r\n\r\nfunction Appointments({ uid, consultations }) {\r\n  const [consults, setConsults] = useState([]);\r\n  useEffect(() => {\r\n    let docConsults = [];\r\n    consultations.forEach((element) => {\r\n      if (uid === element.docId) {\r\n        docConsults.push(element);\r\n      }\r\n    });\r\n    setConsults(docConsults);\r\n  }, [consultations, uid]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row row-eq-spacing-sm\">\r\n        {consults.length > 0 ? (\r\n          consults.map((item, i) => {\r\n            return (\r\n              <div key={i} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n                <Appointment consultation={item} />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <h5>No Appointments found</h5>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Appointments;\r\n","import React, { Fragment } from \"react\";\r\n\r\nfunction Pharmacy({ pharmacies }) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row row-eq-spacing-sm\">\r\n        {pharmacies.map((pharma) => (\r\n          <div key={pharma.storeId} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n            <div className=\"mw-full\">\r\n              <div className=\"card  p-0 m-10\">\r\n                <div className=\"px-card py-10 border-bottom\">\r\n                  <h2 className=\"card-title font-size-18 m-0\">{pharma.name}</h2>\r\n                </div>\r\n\r\n                <div className=\"content m-10\">\r\n                  <div>{pharma.storeId}</div>\r\n                  <hr />\r\n                  <div>{pharma.phone}</div>\r\n                  <hr />\r\n                  <div>\r\n                    <i\r\n                      style={{ color: \"red\" }}\r\n                      className=\"fa fa-map-marker-alt mr-5\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                    {pharma.address}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Pharmacy;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { GetDoc } from \"../../db/hooks/authHooks\";\r\nimport { updateDocPic } from \"../../db/ops/authOps\";\r\n\r\nfunction DoctorProfile({ uid }) {\r\n  const { doctor, dataPresent } = GetDoc(uid);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handlePicChange = async (e) => {\r\n    setUploading(true);\r\n    await updateDocPic(e.target.files[0], uid);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mw-full\">\r\n        <div className=\"card p-0 text-center\">\r\n          <img\r\n            src={\r\n              dataPresent && doctor.profileImage.length > 0\r\n                ? doctor.profileImage\r\n                : \"https://www.pngfind.com/pngs/b/610-6104451_placeholder-png.png\"\r\n            }\r\n            className=\"img-fluid rounded-circle mt-10\"\r\n            alt=\"...\"\r\n            width=\"200\"\r\n            height=\"200\"\r\n          />\r\n\r\n          <div className=\"content\">\r\n            <h2 className=\"content-title\">{`Dr. ${doctor.fullName}`}</h2>\r\n            <p className=\"text-muted\">{`Email: ${doctor.email}`}</p>\r\n            <p className=\"text-muted\">{`Hospital: ${doctor.hospital}`}</p>\r\n            <p className=\"text-muted\">{`Specialization: ${doctor.specialization}`}</p>\r\n            {dataPresent && !doctor.profileImage.length > 0 && (\r\n              <div className=\"custom-file\">\r\n                <label htmlFor=\"profile-pic\">Update Picture</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"profile-pic\"\r\n                  accept=\".jpg,.png,.jpeg\"\r\n                  onChange={handlePicChange}\r\n                  disabled={uploading}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default DoctorProfile;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { deleteConsultation, updateConsultation } from \"../../db/ops/authOps\";\r\n\r\nfunction Consultation({ consultation, consultations }) {\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const initDateAndSlot = {\r\n    date: consultation.date,\r\n    slot: consultation.slot,\r\n  };\r\n\r\n  const [dateAndSlot, setDateAndSlot] = useState(initDateAndSlot);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n\r\n  const today = new Date();\r\n  const availableDates = [];\r\n  for (let i = 0; i <= 30; i++) {\r\n    availableDates.push(\r\n      new Date(new Date().setDate(today.getDate() + i)).toDateString()\r\n    );\r\n  }\r\n\r\n  const handleDateSlot = (e) => {\r\n    setDateAndSlot((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n\r\n    if (e.target.name === \"date\") {\r\n      const bookedslots = [];\r\n\r\n      consultations.forEach((item) => {\r\n        if (item.docId === consultation.docId && item.date === e.target.value) {\r\n          bookedslots.push(item.slot);\r\n        }\r\n      });\r\n      setBookedSlots(bookedslots);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const bookedslots = [];\r\n\r\n    consultations.forEach((item) => {\r\n      if (\r\n        item.docId === consultation.docId &&\r\n        item.date === consultation.date\r\n      ) {\r\n        bookedslots.push(item.slot);\r\n      }\r\n    });\r\n    setBookedSlots(bookedslots);\r\n  }, [consultation.date, consultation.docId, consultations]);\r\n\r\n  const slots = [\r\n    { value: \"slot1\", name: \"Slot-1  9:00 - 9:15\" },\r\n    { value: \"slot2\", name: \"Slot-2  9:15 - 9:30\" },\r\n    { value: \"slot3\", name: \"Slot-3  9:30 - 9:45\" },\r\n    { value: \"slot4\", name: \"Slot-4  9:45 - 9:60\" },\r\n    { value: \"slot5\", name: \"Slot-5  10:00 - 10:15\" },\r\n    { value: \"slot6\", name: \"Slot-6  10:15 - 10:30\" },\r\n    { value: \"slot7\", name: \"Slot-7  10:30 - 10:45\" },\r\n    { value: \"slot8\", name: \"Slot-8  10:45 - 10:60\" },\r\n    { value: \"slot9\", name: \"Slot-9  11:00 - 11:15\" },\r\n    { value: \"slot10\", name: \"Slot-10  11:15 - 11:30\" },\r\n    { value: \"slot11\", name: \"Slot-11  11:30 - 11:45\" },\r\n    { value: \"slot12\", name: \"Slot-12  11:45 - 11:60\" },\r\n    { value: \"slot13\", name: \"Slot-13  12:00 - 12:15\" },\r\n    { value: \"slot14\", name: \"Slot-14  12:15 - 12:30\" },\r\n    { value: \"slot15\", name: \"Slot-15  12:30 - 12:45\" },\r\n    { value: \"slot16\", name: \"Slot-16  12:45 - 12:60\" },\r\n    { value: \"slot17\", name: \"Slot-17  13:00 - 13:15\" },\r\n    { value: \"slot18\", name: \"Slot-18  13:15 - 13:30\" },\r\n    { value: \"slot19\", name: \"Slot-19  13:30 - 13:45\" },\r\n    { value: \"slot20\", name: \"Slot-20  13:45 - 13:60\" },\r\n    { value: \"slot21\", name: \"Slot-21  14:00 - 14:15\" },\r\n    { value: \"slot22\", name: \"Slot-22  14:15 - 14:30\" },\r\n    { value: \"slot23\", name: \"Slot-23  14:30 - 14:45\" },\r\n    { value: \"slot24\", name: \"Slot-24  14:45 - 14:60\" },\r\n    { value: \"slot25\", name: \"Slot-25  15:00 - 15:15\" },\r\n    { value: \"slot26\", name: \"Slot-26  15:15 - 15:30\" },\r\n    { value: \"slot27\", name: \"Slot-27  15:30 - 15:45\" },\r\n    { value: \"slot28\", name: \"Slot-28  15:45 - 15:60\" },\r\n    { value: \"slot29\", name: \"Slot-29  16:00 - 16:15\" },\r\n    { value: \"slot30\", name: \"Slot-30  16:15 - 16:30\" },\r\n    { value: \"slot31\", name: \"Slot-31  16:30 - 16:45\" },\r\n    { value: \"slot32\", name: \"Slot-32  16:45 - 16:60\" },\r\n  ];\r\n  return (\r\n    <div className=\"mw-full\">\r\n      <div className=\"card  p-0 m-10\">\r\n        <div className=\"px-card py-10 border-bottom\">\r\n          <h2 className=\"card-title font-size-18 m-0\">\r\n            {consultation.docName}\r\n          </h2>\r\n        </div>\r\n        <div className=\"content m-10\">\r\n          <div>{`Patient: ${consultation.patientName}`}</div>\r\n\r\n          <hr />\r\n          <div>{`Phone: ${consultation.patientMobile}`}</div>\r\n\r\n          <hr />\r\n          <div>{`Medicare: ${consultation.patientMedicare}`}</div>\r\n\r\n          <hr />\r\n          <div>{`DOB: ${consultation.patientDob}`}</div>\r\n\r\n          <hr />\r\n          {!editing && (\r\n            <div>\r\n              <span className=\"font-size-5 \">\r\n                <i\r\n                  style={{ color: \"red\" }}\r\n                  className=\"fa fa-clock mr-5\"\r\n                  aria-hidden=\"true\"\r\n                ></i>{\" \"}\r\n                {consultation.date}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {editing && (\r\n            <div>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"pickDate\"\r\n                name=\"date\"\r\n                required=\"required\"\r\n                value={dateAndSlot.date}\r\n                onChange={handleDateSlot}\r\n              >\r\n                <option value={dateAndSlot.date} disabled>\r\n                  {dateAndSlot.date}\r\n                </option>\r\n\r\n                {availableDates.map((date) => {\r\n                  return <option value={date}>{date}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          <hr />\r\n          <div>{consultation.specialization}</div>\r\n\r\n          <hr />\r\n          {!editing &&\r\n            slots.map((slot, i) => {\r\n              if (consultation.slot === slot.value)\r\n                return <div key={i}>{slot.name}</div>;\r\n              else return <Fragment key={i} />;\r\n            })}\r\n\r\n          {editing && (\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"slot\"\r\n              name=\"slot\"\r\n              required=\"required\"\r\n              value={dateAndSlot.slot}\r\n              onChange={handleDateSlot}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Pick a Slot\r\n              </option>\r\n              {slots.map((slot) => {\r\n                if (!bookedSlots.includes(slot.value))\r\n                  return <option value={slot.value}>{slot.name}</option>;\r\n                else return <></>;\r\n              })}\r\n            </select>\r\n          )}\r\n\r\n          <hr />\r\n          <form className=\"form-inline\">\r\n            <div className=\"form-group mb-10\">\r\n              {(function () {\r\n                let bookedDate =\r\n                  consultation.date +\r\n                  \" \" +\r\n                  slots\r\n                    .filter((slot) => slot.value === consultation.slot)[0]\r\n                    .name.split(\" \")[2] +\r\n                  \":00\";\r\n                let bDate = new Date(bookedDate);\r\n                bDate.setHours(bDate.getHours() - 3);\r\n                if (new Date() <= bDate && !editing) {\r\n                  return (\r\n                    <button\r\n                      className=\"btn btn-primary btn-sm\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setEditing(true);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  );\r\n                }\r\n              })()}\r\n              {!editing && (\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    deleteConsultation(consultation.id);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              )}\r\n              {editing && (\r\n                <button\r\n                  className=\"btn btn-success btn-sm\"\r\n                  onClick={async (e) => {\r\n                    e.preventDefault();\r\n                    await updateConsultation(consultation.id, dateAndSlot);\r\n                    setEditing(false);\r\n                    setDateAndSlot(initDateAndSlot);\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              )}\r\n              {editing && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setEditing(false);\r\n                    setDateAndSlot(initDateAndSlot);\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Consultation;\r\n","import React, { Fragment } from \"react\";\r\nimport Consultation from \"./Consultation\";\r\n\r\nfunction AllConsultations({ consults }) {\r\n  return (\r\n    <Fragment>\r\n      {consults.length > 0 ? (\r\n        <div className=\"row row-eq-spacing-sm\">\r\n          {consults.map((item, i) => {\r\n            return (\r\n              <div key={i} className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n                <Consultation consultation={item} consultations={consults} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div>No Consultations Found</div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AllConsultations;\r\n","import React, { Fragment } from \"react\";\r\nimport { deletePrescription } from \"../../db/ops/authOps\";\r\n\r\nfunction Prescription({ prescription }) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"col-sm-12 col-lg-6 col-xl-3\">\r\n        <div className=\"mw-full\">\r\n          <div className=\"card  p-0 m-10\">\r\n            <div className=\"px-card py-10 border-bottom\">\r\n              <h2 className=\"card-title font-size-18 m-0\">\r\n                {prescription.pharmacyName}\r\n              </h2>\r\n            </div>\r\n\r\n            <div className=\"content m-10\">\r\n              <div>{`Upload On: ${prescription.uploadedOn}`}</div>\r\n              <hr />\r\n              <div>{prescription.pharmacyId}</div>\r\n              <hr />\r\n              <div>{prescription.pharmacyPhone}</div>\r\n              <hr />\r\n              <div>\r\n                <i\r\n                  style={{ color: \"red\" }}\r\n                  className=\"fa fa-map-marker-alt mr-5\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                {prescription.pharmacyAddress}\r\n              </div>\r\n              <hr />\r\n\r\n              <div className=\"form-inline\">\r\n                <div className=\"form-group mb-0\">\r\n                  <button className=\"btn btn-secondary btn-sm\">\r\n                    <a\r\n                      href={prescription.downloadUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      download\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      Downlod\r\n                    </a>\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-primary btn-sm\"\r\n                    onClick={() => deletePrescription(prescription.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Prescription;\r\n","import React, { Fragment } from \"react\";\r\nimport { GetPrescriptions } from \"../../db/hooks/authHooks\";\r\nimport Prescription from \"./Prescription\";\r\n\r\nfunction Prescriptions({ uid }) {\r\n  const patientPrescritions = GetPrescriptions(uid);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row row-eq-spacing-sm\">\r\n        {patientPrescritions.length > 0 ? (\r\n          patientPrescritions.map((prescription, i) => {\r\n            return <Prescription key={i} prescription={prescription} />;\r\n          })\r\n        ) : (\r\n          <h5>No Prescriptions available</h5>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Prescriptions;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { addPharmacy } from \"../../db/ops/authOps\";\r\n\r\nfunction AddPharmacy() {\r\n  const initState = {\r\n    name: \"\",\r\n    storeId: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n  };\r\n  const [pharmacyState, setPharmacyState] = useState(initState);\r\n  const handleChange = (e) => {\r\n    setPharmacyState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addPharmacy(pharmacyState);\r\n    setPharmacyState(initState);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mt-20\"></div>\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-8 col-lg-6\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label className=\"required\">Pharmacy Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  pattern=\"[A-Za-z\\s]{3,}\"\r\n                  title=\"3 or more Alphabets\"\r\n                  placeholder=\"Enter Name\"\r\n                  required=\"required\"\r\n                  value={pharmacyState.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"required\">Pharmacy Id</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"storeId\"\r\n                  name=\"storeId\"\r\n                  pattern=\"[0-9]{6}\"\r\n                  title=\"6 digit number\"\r\n                  placeholder=\"Enter Address\"\r\n                  required=\"required\"\r\n                  value={pharmacyState.storeId}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"required\">Pharmacy Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  pattern=\"[A-Za-z\\s,-]{3,}\"\r\n                  title=\"3 or more Alphabets with ',' & '-'\"\r\n                  placeholder=\"Enter Address\"\r\n                  required=\"required\"\r\n                  value={pharmacyState.address}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"required\">Pharmacy Phone</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  pattern=\"\\+61[0-9]{9}\"\r\n                  title=\"Start with +61 and 9 digits after\"\r\n                  placeholder=\"Enter Address\"\r\n                  required=\"required\"\r\n                  value={pharmacyState.phone}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <button className=\"btn btn-danger btn-sm\" type=\"submit\">\r\n                Add\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AddPharmacy;\r\n","import { Fragment } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport BookConsultation from \"./components/admin/BookConsultation\";\r\nimport DocRequests from \"./components/admin/DocRequests\";\r\nimport AddHospital from \"./components/admin/AddHospital\";\r\nimport Login from \"./components/home/Login\";\r\nimport Register from \"./components/home/Register\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport BookAConsultation from \"./components/patient/BookAConsultation\";\r\nimport Consultations from \"./components/patient/Consultations\";\r\nimport MedicalRecord from \"./components/patient/MedicalRecord\";\r\nimport Pharmacies from \"./components/patient/Pharmacies\";\r\nimport Profile from \"./components/patient/Profile\";\r\nimport PatientRecords from \"./components/doctor/PatientRecords\";\r\nimport Appointments from \"./components/doctor/Appointments\";\r\nimport Pharmacy from \"./components/Pharmacy\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport {\r\n  GetAllConsultations,\r\n  GetAllHospitals,\r\n  GetAllPharmacies,\r\n  GetAllUsers,\r\n  RegisterAuth,\r\n} from \"./db/hooks/authHooks\";\r\nimport { DocRequests as DoctorRequests } from \"./db/hooks/authHooks\";\r\nimport DoctorProfile from \"./components/doctor/DoctorProfile\";\r\nimport AllConsultations from \"./components/admin/AllConsultations\";\r\nimport Prescriptions from \"./components/patient/Prescriptions\";\r\nimport AddPharmacy from \"./components/admin/AddPharmacy\";\r\n\r\ntoast.configure();\r\nfunction App() {\r\n  const user = RegisterAuth();\r\n  const doctorsReqs = DoctorRequests();\r\n  const allUsers = GetAllUsers();\r\n  const allConsultations = GetAllConsultations();\r\n  const hospitals = GetAllHospitals();\r\n  const pharmacies = GetAllPharmacies();\r\n\r\n  const notLoggedIn = [\r\n    { content: \"Login\", key: \"/login\", icon: \"fa-sign-in-alt\" },\r\n    { content: \"Register\", key: \"/register\", icon: \"fa-user-plus\" },\r\n  ];\r\n  const loggedInDoc = [\r\n    { content: \"Appointments\", key: \"/appointments\", icon: \"fa-list-alt\" },\r\n    {\r\n      content: \"Patient-Records\",\r\n      key: \"/patientrecords\",\r\n      icon: \"fa-address-card\",\r\n    },\r\n    { content: \"Pharmacy\", key: \"/pharmacy\", icon: \"fa-notes-medical\" },\r\n    { content: \"Profile\", key: \"/docprofile\", icon: \"fa-user\" },\r\n  ];\r\n\r\n  const loggedInPatient = [\r\n    { content: \"Consultations\", key: \"/consultations\", icon: \"fa-list-alt\" },\r\n    { content: \"Medical Record\", key: \"/medrecord\", icon: \"fa-address-card\" },\r\n    {\r\n      content: \"Book a Consultaiton\",\r\n      key: \"/bookaconsultation\",\r\n      icon: \"fa-anchor\",\r\n    },\r\n    { content: \"Pharmacy\", key: \"/pharmacies\", icon: \"fa-notes-medical\" },\r\n    {\r\n      content: \"Prescriptions\",\r\n      key: \"/prescriptions\",\r\n      icon: \"fa-notes-medical\",\r\n    },\r\n    {\r\n      content: \"Profile\",\r\n      key: \"/patientprofile\",\r\n      icon: \"fa-user\",\r\n    },\r\n  ];\r\n\r\n  const loggedInAdmin = [\r\n    { content: \"Doctor Requests\", key: \"/docrequests\", icon: \"fa-user-md\" },\r\n    {\r\n      content: \"Book a Consultation\",\r\n      key: \"/bookconsultation\",\r\n      icon: \"fa-anchor\",\r\n    },\r\n    {\r\n      content: \"View Constultations\",\r\n      key: \"/viewconsultations\",\r\n      icon: \"fa-list-alt\",\r\n    },\r\n    {\r\n      content: \"Add A Hospital\",\r\n      key: \"/addhospital\",\r\n      icon: \"fa-plus-square\",\r\n    },\r\n    {\r\n      content: \"Add A Pharmacy\",\r\n      key: \"/addPharmacy\",\r\n      icon: \"fa-plus-circle\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* Modals come before page wrapper */}\r\n      <div\r\n        className=\"page-wrapper with-navbar with-sidebar\"\r\n        data-sidebar-type=\"overlayed-sm-and-down\"\r\n      >\r\n        {user !== null ? (\r\n          user.data.role === \"Doctor\" ? (\r\n            <>\r\n              <NavBar navLinks={loggedInDoc} fullName={user.data.fullName} />\r\n              <Redirect to=\"/appointments\" />\r\n            </>\r\n          ) : user.data.role === \"Patient\" ? (\r\n            <>\r\n              <NavBar\r\n                navLinks={loggedInPatient}\r\n                fullName={user.data.fullName}\r\n              />\r\n              <Redirect to=\"/consultations\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <NavBar navLinks={loggedInAdmin} fullName={user.data.fullName} />\r\n              <Redirect to=\"/docrequests\" />\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <NavBar navLinks={notLoggedIn} notLoggedIn={true} />\r\n            <Redirect to=\"/\" />\r\n          </>\r\n        )}\r\n\r\n        {/* navbar, sidebar, sticky alerts go here */}\r\n        <div className=\"content-wrapper\">\r\n          {user === null && <Redirect to=\"/\" />}\r\n          <Route exact path=\"/\">\r\n            <Login docRequests={doctorsReqs} />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login docRequests={doctorsReqs} />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register hospitals={hospitals} />\r\n          </Route>\r\n          <Route exact path=\"/docrequests\">\r\n            <DocRequests docRequests={doctorsReqs} />\r\n          </Route>\r\n          <Route exact path=\"/bookconsultation\">\r\n            <BookConsultation\r\n              users={allUsers}\r\n              consultations={allConsultations}\r\n              hospitals={hospitals}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/bookaconsultation\">\r\n            <BookAConsultation\r\n              users={allUsers}\r\n              patient={user}\r\n              consultations={allConsultations}\r\n              hospitals={hospitals}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/consultations\">\r\n            <Consultations\r\n              uid={user && (user.uid || \"\")}\r\n              consultations={allConsultations}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/medrecord\">\r\n            <MedicalRecord patient={user} />\r\n          </Route>\r\n          <Route exact path=\"/patientrecords\">\r\n            <PatientRecords users={allUsers} />\r\n          </Route>\r\n          <Route exact path=\"/appointments\">\r\n            <Appointments\r\n              uid={user && (user.uid || \"\")}\r\n              consultations={allConsultations}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/pharmacy\">\r\n            <Pharmacy pharmacies={pharmacies} />\r\n          </Route>\r\n          <Route exact path=\"/docprofile\">\r\n            <DoctorProfile uid={user && (user.uid || \"\")} />\r\n          </Route>\r\n          <Route exact path=\"/viewconsultations\">\r\n            <AllConsultations consults={allConsultations} />\r\n          </Route>\r\n          <Route exact path=\"/pharmacies\">\r\n            <Pharmacies\r\n              uid={user && (user.uid || \"\")}\r\n              pharmacies={pharmacies}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/prescriptions\">\r\n            <Prescriptions uid={user && (user.uid || \"\")} />\r\n          </Route>\r\n          <Route exact path=\"/patientprofile\">\r\n            <Profile uid={user && (user.uid || \"\")} />\r\n          </Route>\r\n          <Route exact path=\"/addhospital\">\r\n            <AddHospital />\r\n          </Route>\r\n          <Route exact path=\"/addPharmacy\">\r\n            <AddPharmacy />\r\n          </Route>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}